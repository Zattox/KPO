services:
  postgres-orders:
    image: postgres:15
    environment:
      POSTGRES_DB: OrdersDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  postgres-payments:
    image: postgres:15
    environment:
      POSTGRES_DB: PaymentsDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  orders-service:
    build:
      context: .
      dockerfile: OrdersService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-orders;Database=OrdersDb;Username=postgres;Password=postgres
      - RabbitMQ__HostName=rabbitmq
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5001:80"
    depends_on:
      postgres-orders:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

  payments-service:
    build:
      context: .
      dockerfile: PaymentsService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres-payments;Database=PaymentsDb;Username=postgres;Password=postgres
      - RabbitMQ__HostName=rabbitmq
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5002:80"
    depends_on:
      postgres-payments:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - microservices-network

  api-gateway:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "8080:80"
    depends_on:
      - orders-service
      - payments-service
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
